<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solmarket.mapper.ProductMapper">

	<!-- db컬럼명 as 별칭== DTO/ -->
	
	<!-- 상품등록 -->
	<insert id="insert">
		insert into product
			(product_no, user_no, market_no, category_no, product_name, product_qn, product_price, product_content)
		values(product_seq.nextval,#{userNo},#{marketNo},#{categoryNo},#{productName},#{productQN},#{productPrice},#{productContent})
	</insert>
	
	<!-- 판매자 이름 가져오기 -->
	<select id="userName" resultType="string">
		select user_name from myuser where user_no = #{userNo}
	</select>
	
	<!-- 장터 이름 가져오기 -->
	<select id="marketName" resultType="string">
		select market_name from market where market_no = #{marketNo}
	</select>
	
	<!-- 상품 목록 조회 :  페이지 나누기 전
	<select id="select" resultType="com.solmarket.dto.ProductDTO">
		select 
			p.product_no as productNo, m.market_name as dummy,
			p.product_name as productName, p.product_price as productPrice,
			p.product_content as productContent, p.product_date as productDate,
			p.product_status as productStatus
		
		from product p join market m on p.market_no = m.market_no 
		where product_no>= 0 order by product_no desc
	</select>-->
	
	
	<!-- 상품 목록 조회 : 페이지 나누기 -->	
	<select id="select" resultType="com.solmarket.dto.ProductDTO">
		<![CDATA[
		select * from 
			(select rownum as num, statusList.* from
				(select user_name as userName, p.* from 
					(select p.product_no as productNo, m.market_name as dummy,
							p.user_no as userNo, p.market_no as marketNo,
							p.product_name as productName, p.product_price as productPrice,
							p.product_content as productContent, p.product_date as productDate,
							p.product_status as productStatus
					from product p left outer join market m on p.market_no = m.market_no 
					where p.user_no = #{userNo} order by p.product_status asc, p.product_no desc) p 
				left outer join myUser u on p.userNo = u.user_no) statusList
				where rownum <= (#{cri.pageNum} * #{cri.amount}))
			where num > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	
	
	
	<!-- 리스트에서 상품명 클릭시 -->
	<select id="read" resultType="com.solmarket.dto.ProductDTO">
		select product_no as productNo, product_name as productName, product_qn as productQN,
			 product_content as productContent, product_price as productPrice, product_status as productStatus
		from product
		where product_no=${productNo}
	</select>

	<!-- 페이지 total 게시물보여주기 -->
	<select id="totalCnt" resultType="int">
		select count(*) from product
		where user_no =#{userNo}	
	</select>	

	<!-- 재고상점 등록 : 상품 번호가 일치한다면 상품 수량,  할인율 적용, 상태 변경,  -->
	<update id="update">
		update product
		set product_qn=#{productQN}, product_sale = #{productSale}, product_status=5
		where product_no=#{productNo}
	</update>

	<!-- 오픈 예정 장터 리스트 보여주기 -->
	<select id="marketList" resultType="com.solmarket.dto.MarketDTO">	
		<![CDATA[
		select num, marketNo, marketName,  marketSD,marketED,  marketLoc
		from (select /*+INDEX_DESC(market pk_market)*/
				 rownum as num, market_no as marketNo, market_name as marketName, market_sd as marketSD,market_ed as marketED, market_loc as marketLoc
			 from market
			 where rownum <= (#{cri.pageNum} * #{cri.amount}) and market_status = 1 )
		where num > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 오픈 예정 장터 리스트 페이징 -->
	<select id="marketTotal" resultType="int">
		select count(*) from market
		where market_status = 1
	</select>
	
	<!-- 인덱스에서 참여 중인 장터 리스트 보여주기 -->
	<select id="mList" resultType="com.solmarket.dto.MarketDTO">
		select market_no as marketNo, market_name as marketName, market_sd as marketSD, market_loc as marketLoc
		from market
		where market_status = 2
	</select>
	
	<!-- 인덱스에서 오픈 예정 장터 리스트 보여주기 -->
	<select id="oList" resultType="com.solmarket.dto.MarketDTO">
		select market_no as marketNo, market_name as marketName, market_sd as marketSD, market_loc as marketLoc
		from market
		where market_status = 1 order by market_no desc
	</select>

	<!-- 인덱스에서 상품 리스트 보여주기 -->
	<select id="pList" resultType="com.solmarket.dto.ProductDTO">
		select product_name as productName, product_price as productPrice
		from product
	</select>

	<!-- 장터 종료 후 상품 리스트 보여주기 -->
	<select id="remainList" resultType="com.solmarket.dto.ProductDTO">
		<![CDATA[
		select * from 
			(select rownum as num, statusList.* from
				(select user_name as userName, p.* from 
					(select p.product_no as productNo, m.market_name as dummy,
							p.user_no as userNo,
							p.product_name as productName, 
							p.product_price as productPrice,
							p.product_content as productContent, 
							p.product_date as productDate,
							p.product_qn as productQN
					from product p left outer join market m on p.market_no = m.market_no 
					where p.user_no = #{userNo} and product_qn >= 1 and product_status = 4) p 
				left outer join myUser u on p.userNo = u.user_no) statusList
				where rownum <= (#{cri.pageNum} * #{cri.amount}))
			where num > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>

	<!-- 재고 상품 리스트 페이징 -->
	<select id="remainTotal" resultType="int">
		select count(*) from product
		where user_no =#{userNo} and product_status = 4
	</select>
	
	<!-- 온라인 상품 리스트 보여주기 -->
	<select id="onlineList" resultType="com.solmarket.dto.ProductDTO">
	<![CDATA[
		select * from 
			(select rownum as num, statusList.* from
				(select user_name as userName, p.* from 
					(select p.product_no as productNo, m.market_name as dummy,
							p.user_no as userNo,
							p.product_name as productName, 
							p.product_price as productPrice,
							p.product_content as productContent, 
							p.product_date as productDate,
							p.product_qn as productQN
					from product p left outer join market m on p.market_no = m.market_no 
					where p.user_no = #{userNo} and product_qn >= 1 and product_status = 5) p 
				left outer join myUser u on p.userNo = u.user_no) statusList
				where rownum <= (#{cri.pageNum} * #{cri.amount}))
			where num > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 온라인 상품 페이징 처리 -->
	<select id="onlineTotal" resultType="int">
		select count(*) from product
		where user_no =#{userNo} and product_status = 5
	</select>
	
	<!-- 참여 중인 장터 리스트 보여주기 -->
	<select id="ingMarketList" resultType="com.solmarket.dto.MarketDTO">	
		<![CDATA[
		select num, marketNo, marketName,  marketSD,marketED,  marketLoc
		from (select /*+INDEX_DESC(market pk_market)*/
				 rownum as num, market_no as marketNo, market_name as marketName, market_sd as marketSD,market_ed as marketED, market_loc as marketLoc
			 from market
			 where rownum <= (#{cri.pageNum} * #{cri.amount}) and market_status = 2)
		where num > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 참여 중인 장터 리스트 페이징 -->
	<select id="ingMarketTotal" resultType="int">
		select count(*) from market
		where market_status = 2
	</select>
	
	
	
	<!-- 상품 삭제 -->
	<delete id="delete">
		delete from product
		where product_no=#{productNo}
	</delete>


	


</mapper>