<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solmarket.mapper.MemberMapper">
	
	<!-- 회원가입 -->
	<insert id="insert">
		insert into myuser(user_no, user_id, user_pw, user_name, user_phone, user_mail, user_address, user_profile)
		values(myUser_seq.nextval, #{userId}, #{userPw}, #{userName}, #{userPhone}, #{userMail}, #{userAddress}, #{userProfile, jdbcType=VARCHAR})
	</insert>
	
	<!-- 회원가입시 권한부여 -->
	<insert id="insertAuth">
		insert into myuser_auth(user_id, authority)
		values(#{userId}, #{authority})
	</insert>
	
	<!-- 로그인 : userId, 비밀번호 : userPw -->
	<resultMap type="com.solmarket.dto.UserDTO" id="myUser">
		<id property="userId" column="user_id"/>
		<result property="userNo" column="user_no"/>
		<result property="userPw" column="user_pw"/>
		<result property="enabled" column="enabled"/>
		<result property="userName" column="user_name"/>
		<result property="userPhone" column="user_phone"/>
		<result property="userMail" column="user_mail"/>
		<result property="userAddress" column="user_address"/>
		<result property="userProfile" column="user_profile"/>
		<collection property="authorities" resultMap="authList"></collection>
	</resultMap>
		
	<resultMap type="com.solmarket.dto.AuthDTO" id="authList">
		<result property="userId" column="user_id" />
		<result property="authority" column="authority" />
	</resultMap>
	<select id="read" resultMap="myUser">
		select use.user_id, user_pw, enabled, user_name, user_phone, user_mail, user_address, user_profile, authority from 
		myuser use join myuser_auth auth on use.user_id = auth.user_id where use.user_id = #{userId}
	</select>
	
	<!-- 정보 수정 -->
	<update id="updateUser">
		update myuser set user_pw=#{userPw}, user_phone=#{userPhone}, user_mail=#{userMail}, user_address=#{userAddress}, user_profile=#{userProfile}
		where user_id=#{userId}
	</update>

	<!--  회원탈퇴 -->
	<update id="delete">
		update myuser set user_status = 0 where user_id = #{userId}
	</update>
	
	<!-- Mail 중복검사 -->
	<select id="dupMail" resultType="java.lang.String">
		select user_mail as userMail from myuser where user_mail=#{userMail}
	</select>
	
	<!-- ID 찾기 -->
	<select id="searchId" resultType="com.solmarket.dto.UserDTO">
		select user_id as userId from myuser where user_name=#{userName} and user_mail=#{userMail}
	</select>
	
	<!-- PW 찾기 -->
	<update id="updatePw">
		update myuser set user_pw = #{userPw} where user_mail = #{userMail}
	</update>
	
	<!-- PW Check -->
	<select id="checkPw" resultType="java.lang.String">
		select user_pw from myuser where user_id = #{userId}
	</select>
	
	<!-- status 체크 -->
	<select id="userStatus" resultType="Integer">
		select user_status as userStatus from myuser where user_id = #{userId}
	</select>
	
	<!-- 권한요청 -->
	<insert id="reqAuth">
		insert into auth_request(user_id, authority)
		values(#{userId}, #{authority})
	</insert>
</mapper>