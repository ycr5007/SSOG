<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solmarket.mapper.AdminMapper">
	<!-- INDEX 페이지, 장터신청 리스트 -->
	<select id="getRequestMarketList" resultType="com.solmarket.dto.MarketDTO">
		select market_name as marketName, market_loc as marketLoc, user_name as dummy
		from market m left outer join (select user_no, user_name from myUser) u on m.user_no = u.user_no
		where market_status = 0 order by market_no desc
	</select>
	
	<!-- INDEX 페이지, 공지사항 리스트 -->
	<select id="getRequestNoticeList" resultType="com.solmarket.dto.NoticeDTO">
		select notice_title as noticeTitle, notice_Date as noticeDate, market_name as dummy
		from notice n left outer join (select market_no, market_name from market) m on n.market_no = m.market_no
		where notice_status = 0 order by notice_no desc
	</select>
	
	<!-- INDEX 페이지, 회원 비율 -->
	<select id="getUserRatio" resultType="string">
		select (select count(*) from myuser_auth where authority = 'ROLE_USER') || '/' || 
		(select count(*) from myuser_auth where authority = 'ROLE_SELLER') || '/' || 
		(select count(*) from myuser_auth where authority = 'ROLE_MANAGER') as data from dual
	</select>
	<resultMap type="com.solmarket.dto.UserDTO" id="myUser">
		<id property="userNo" column="user_no"/>
		<result property="userId" column="user_id"/>
		<result property="userPw" column="user_pw"/>
		<result property="userName" column="user_name"/>
		<result property="userMail" column="user_mail"/>
		<result property="userStatus" column="user_status"/>
		<result property="userProfile" column="user_profile"/>
		<result property="userPhone" column="user_phone"/>
		<result property="userAddress" column="user_address"/>
		<result property="enabled" column="enabled"/>
		<collection property="authorities" resultMap="authList"></collection>
	</resultMap>
		
	<resultMap type="com.solmarket.dto.AuthDTO" id="authList">
		<result property="userId" column="user_id" />
		<result property="authority" column="authority" />
	</resultMap>
	<!-- 회원관리 > 전체회원 리스트 출력 -->
	<select id="getUserList" resultMap="myUser">
		select * from (select rownum as pagingNum, userList.* from 
			(select user_no, use.user_Id, user_pw, user_Name, user_Mail, user_Status, enabled, authority from myuser use left outer join myuser_auth auth on use.user_id = auth.user_id order by user_no desc)
		userList where rownum <![CDATA[ <= ]]> (#{pageNum} * #{amount})) where pagingNum > ((#{pageNum} - 1) * #{amount})
	</select>
	
	<select id="getUserCount" resultType="Integer">
		select count(*) from myUser
	</select>
	
	<select id="getAuthRequest" resultType="com.solmarket.dto.AuthDTO">
		select user_id as userId, authority from auth_request
	</select>
	
	<select id="getUserDetail" resultMap="myUser">
		select user_no, use.user_id, user_name, user_mail, user_profile, user_status, user_phone, user_address, enabled, authority
		from myUser use left outer join myuser_auth auth on use.user_id = auth.user_id where user_no = #{userNo}
	</select>
	
	<delete id="deleteUserData">
		delete from myuser where user_no = #{userNo}
	</delete>
	
	<insert id="accessAuth">
		insert into myuser_auth(user_id, authority) (select user_id, authority from auth_request where user_id = #{userId})
	</insert>
	
	<delete id="deleteAuth">
		delete from auth_request where user_id = #{user_id}
	</delete>
	
	<!-- 장터 신청 관리 -->
	<select id="getreqMakretList" resultType="com.solmarket.dto.MarketDTO">
		select * from (select rownum as pagingNum, marketList.* from
			(select market_no as marketNo, market_name as marketName, user_name as dummy, market_loc as marketLoc, market_sd as marketSD, market_ed as marketED from market m left outer join myuser u on m.user_no = u.user_no where market_status = 0) marketList
		where rownum <![CDATA[ <= ]]> (#{pageNum} * #{amount})) where pagingNum > ((#{pageNum} - 1) * #{amount})
	</select>
	
	<select id="getMarketCount" resultType="Integer">
		select count(*) from market where market_status = 0
	</select>
	
	<update id="accessMarket">
		update market set market_status = 1 where market_no = #{marketNo}
	</update>
	
	<delete id="refuseMarket">
		delete from market where market_no = #{marketNo}
	</delete>
	
	<!-- 공지사항 신청 관리 -->
	<select id="getreqNoticeList" resultType="com.solmarket.dto.NoticeDTO">
		select * from (select rownum as pagingNum, notice.* from
		(select notice_no as noticeNo, notice_title as noticeTitle, notice_date as noticeDate, notice_category as noticeCategory, notice_status as noticeStatus, market_name as dummy from notice n left outer join market m on n.market_no = m.market_no where notice_status = 0 order by notice_date desc)
		notice where rownum <![CDATA[ <= ]]> (#{pageNum} * #{amount})) where pagingNum > ((#{pageNum} - 1) * #{amount})
	</select>
	
	<select id="getNoticeCount" resultType="Integer">
		select count(*) from notice where notice_status = 0
	</select>
	
	<update id="accessNotice">
		update notice set notice_status = 1 where notice_no = #{noticeNo}
	</update>
	
	<delete id="refuseNotice">
		delete from notice where notice_no = #{noticeNo}
	</delete>
	
	<!-- 글 관리 -->
	<select id="getBoardList" resultType="com.solmarket.dto.BoardDTO">
		select * from (select rownum as pagingNum, bbs.* from
		(select board_no as boardNo, board_title as boardTitle, board_content as boardContent, board_date as boardDate, us.user_name as userName from board bbs join myuser us on bbs.user_no = us.user_no where board_no > 0 order by board_no desc) bbs
		where rownum <![CDATA[ <= ]]> (#{pageNum} * #{amount})) where pagingNum > ((#{pageNum} - 1) * #{amount})
	</select>
	
	<select id="getBoardCount" resultType="int">
		select count(*) from board
	</select>
	
	<delete id="deleteBoard">
		delete from board where board_no = #{boardNo}
	</delete>
	
</mapper>